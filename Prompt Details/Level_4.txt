Write a Python script using PyTorch to train a model to recognize 50 animal species from images in the 'JPEGImages' folder. Each subdirectory in the folder corresponds to a different animal species and contains images of that species. The script should include the following components and considerations:

1. **Data Loading:**
   - Automatically load all images from the 'JPEGImages' folder.
   - Split the images into training and testing datasets.
   - Use `WeightedRandomSampler` to handle class imbalance by assigning higher sampling probability to classes with fewer samples.

2. **Class Weights Calculation:**
   - Calculate the weights for each class by taking the reciprocal of the class counts, adding a small constant (e.g., `1e-6`) to each class count before taking the reciprocal to avoid division by zero. Ensure that these weights are used to influence the sampling in the DataLoader.

3. **Data Preprocessing:**
   - Resize images to 224x224 pixels.
   - Normalize images using the mean and standard deviations typical for ImageNet (mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]).
   - Apply augmentation techniques such as random horizontal flips and random rotations only to the training dataset to enhance model generalization.

4. **Model Definition:**
   - Utilize a pretrained ResNet50 model, modifying the final fully connected layer to classify 50 animal classes. 
   - Add Batch Normalization and Dropout to newly added layers to prevent overfitting.

5. **Model Training:**
   - Train the model using the DataLoader. 
   - Set the learning rate to 0.001, train for 10 epochs, and print the loss every 20 steps. Implement mixed precision training to optimize GPU usage.

6. **Model Evaluation:**
   - Evaluate the model on an independent testing set, reporting the accuracy.

7. **Data Loader Parameters:**
   - Configure the DataLoader with a batch size of 64, `num_workers` to 8, and `pin_memory` to True for efficient data management.
